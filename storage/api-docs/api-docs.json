{
    "openapi": "3.0.0",
    "info": {
        "title": "API Focus",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        },
        {
            "url": "https://dev.api.focus.grupomobius.com"
        },
        {
            "url": "https://api.focus.grupomobius.com"
        }
    ],
    "paths": {
        "/accessories/{id}": {
            "put": {
                "tags": [
                    "accessories"
                ],
                "summary": "Updated accessory",
                "operationId": "updateAccessory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated accessory object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Accessory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory not found"
                    }
                }
            }
        },
        "/accessory-types/{id}": {
            "put": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Updated accessory type",
                "operationId": "updateAccessoryType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated accessory type object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessoryType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessoryType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory type not found"
                    }
                }
            }
        },
        "/brands/{id}": {
            "put": {
                "tags": [
                    "brands"
                ],
                "summary": "Updated brand",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated brand object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            }
        },
        "/budget-pending-task/{id}": {
            "put": {
                "tags": [
                    "budget-pending-task"
                ],
                "summary": "Updated budget pending task",
                "operationId": "updateBudgetPendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated budget pending task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetPendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetPendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found"
                    }
                }
            }
        },
        "/api/campas/getall": {
            "get": {
                "tags": [
                    "campas"
                ],
                "summary": "Get all campas",
                "operationId": "7091b3e6883845bdc7cb413d1498c670",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/campas/update/{id}": {
            "put": {
                "tags": [
                    "campas"
                ],
                "summary": "Updated campa",
                "operationId": "updateCampa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated campa object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campa not found"
                    }
                }
            }
        },
        "/api/categories/getall": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "operationId": "e86f3ceff0150e9abb80f1b9a9269d5f",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/categories/update/{id}": {
            "put": {
                "tags": [
                    "categories"
                ],
                "summary": "Updated category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated category object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/colors/{id}": {
            "put": {
                "tags": [
                    "colors"
                ],
                "summary": "Updated color",
                "operationId": "updateColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated color object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Color"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found"
                    }
                }
            }
        },
        "/api/companies/getall": {
            "get": {
                "tags": [
                    "companies"
                ],
                "summary": "Get all companies",
                "operationId": "5d736021be1e9e4c1cf74512f6b26ef2",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/companies/update/{id}": {
            "put": {
                "tags": [
                    "companies"
                ],
                "summary": "Updated company",
                "operationId": "updateCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated company object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "/api/customers/getall": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "operationId": "fd67d498ed291052603ddd8f042458e3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "operationId": "9dbdb0ec3a90ff608165986f2cf42fac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found."
                    }
                }
            }
        },
        "/customers/update/{id}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "summary": "Updated customer",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/damages/{id}": {
            "put": {
                "tags": [
                    "damages"
                ],
                "summary": "Updated damage",
                "operationId": "updateDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Damage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Damage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Damage not found"
                    }
                }
            }
        },
        "/damage-images/{id}": {
            "put": {
                "tags": [
                    "damage-images"
                ],
                "summary": "Updated damage image",
                "operationId": "updateDamageImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated damage image object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DamageImage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DamageImage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Damage image not found"
                    }
                }
            }
        },
        "/api/defleet-variables/getall": {
            "get": {
                "tags": [
                    "defleet-variables"
                ],
                "summary": "Get all defleet vairables",
                "operationId": "dde4121a85d0e67a150192fcb218d4b9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefleetVariable"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/estimated-dates/{id}": {
            "put": {
                "tags": [
                    "estimated-dates"
                ],
                "summary": "Updated estimated date",
                "operationId": "updateEstimatedDate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated estimated date object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EstimatedDate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedDate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Estimated date not found"
                    }
                }
            }
        },
        "/api/grouptasks/getall": {
            "get": {
                "tags": [
                    "group tasks"
                ],
                "summary": "Get all group tasks",
                "operationId": "b124ffe066473a7acd2c3b8283a964e2",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/grouptasks/{id}": {
            "get": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Get group task by ID",
                "operationId": "66ee6747b6d98260464f1973e05beb5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Task not found."
                    }
                }
            }
        },
        "/grouptasks/update/{id}": {
            "put": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Updated group task",
                "operationId": "updateGroupTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated group task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Task not found"
                    }
                }
            }
        },
        "/api/incidences/getall": {
            "get": {
                "tags": [
                    "incidences"
                ],
                "summary": "Get all incidences",
                "operationId": "4a3348e70398e69fbb9ee3a2f9fa9873",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/incidence-types/getall": {
            "get": {
                "tags": [
                    "incidence-types"
                ],
                "summary": "Get all incidence types",
                "operationId": "2d0a66f0fa922cf1fa3b524abb7cfb8a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidenceType"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/incidences/{id}": {
            "get": {
                "tags": [
                    "incidences"
                ],
                "summary": "Get incidence by ID",
                "operationId": "edf9040b9193e250f151b52d2a335a5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence not found."
                    }
                }
            }
        },
        "/incidences/update/{id}": {
            "put": {
                "tags": [
                    "incidences"
                ],
                "summary": "Updated incidence",
                "operationId": "updateIncidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated incidence object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence not found"
                    }
                }
            }
        },
        "/incidence-images/{id}": {
            "put": {
                "tags": [
                    "incidence-images"
                ],
                "summary": "Updated incidence images",
                "operationId": "updateIncidenceImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated incidence images object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncidenceImage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidenceImage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence image not found"
                    }
                }
            }
        },
        "/api/login-logs/getall": {
            "get": {
                "tags": [
                    "login-logs"
                ],
                "summary": "Get all login logs",
                "operationId": "0dc95f4895f22c413d3210c003c1fecc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginLog"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/operations/getall": {
            "get": {
                "tags": [
                    "operations"
                ],
                "summary": "Get all type operations",
                "operationId": "cd4dc946bd1a5462060d0a224f6a4358",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/operations/{id}": {
            "get": {
                "tags": [
                    "operations"
                ],
                "summary": "Get operation by ID",
                "operationId": "b60abfb38a7eb5eca627f624ca13d8df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found."
                    }
                }
            }
        },
        "/operations/{id}": {
            "put": {
                "tags": [
                    "operations"
                ],
                "summary": "Updated operation model",
                "operationId": "updateOperation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found"
                    }
                }
            }
        },
        "/api/password-reset-codes/getall": {
            "get": {
                "tags": [
                    "password-reset-codes"
                ],
                "summary": "Get all password reset codes",
                "operationId": "ec93216ddd0312fd3b5481d75aadbbfd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordResetCode"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/pending-tasks/getall": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get all pending tasks",
                "operationId": "38b62cbf649ce5953c629705934fac5d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/pending-tasks/{id}": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get pending task by ID",
                "operationId": "2dfb4967add2b76f56e4e84196222ef1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pending Task not found."
                    }
                }
            }
        },
        "/pending-tasks/update/{id}": {
            "put": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Updated pending task",
                "operationId": "updatePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated pending task  object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pending task not found"
                    }
                }
            }
        },
        "/api/people-for-reports/getall": {
            "get": {
                "tags": [
                    "people-for-reports"
                ],
                "summary": "Get all people for reports",
                "operationId": "f60848cc9bce9ee7ba2ae71c28e4792a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleForReport"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/provinces/getall": {
            "get": {
                "tags": [
                    "provinces"
                ],
                "summary": "Get all provinces",
                "operationId": "83e87a5a16564a6f09d7dc8669712ad1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/provinces/{id}": {
            "get": {
                "tags": [
                    "provinces"
                ],
                "summary": "Get province by ID",
                "operationId": "4008b1ab9f09e5fffe2e57a1e0df6ec5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Province not found."
                    }
                }
            }
        },
        "/provinces/update/{id}": {
            "put": {
                "tags": [
                    "provinces"
                ],
                "summary": "Updated province",
                "operationId": "updateProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated province object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Province"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Province not found"
                    }
                }
            }
        },
        "/api/purchase-operations/getall": {
            "get": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Get all purchase operatons",
                "operationId": "257c5ac9223081fdae1d3b2ae13df39d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/purchase-operations/{id}": {
            "get": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Get purchase operation by ID",
                "operationId": "c502449c88d9a3e692bcb26a45c0cfe8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase Operation not found."
                    }
                }
            }
        },
        "/purchase-operations/update/{id}": {
            "put": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Updated purchase operation",
                "operationId": "updatePurchaseOperation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOperation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase operation not found"
                    }
                }
            }
        },
        "/question-answers/update/{id}": {
            "put": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Updated question answer",
                "operationId": "updateQuestionAnswer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated question answer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionAnswer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionAnswer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question answer not found"
                    }
                }
            }
        },
        "/question-answers/update-response/{id}": {
            "put": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Updated question answer",
                "operationId": "updateQuestionAnswer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated question answer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionAnswer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionAnswer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question answer not found"
                    }
                }
            }
        },
        "/api/questions/getall": {
            "get": {
                "tags": [
                    "questions"
                ],
                "summary": "Get all type questions",
                "operationId": "4d9354eafb654909f0747d8e8705d498",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/questionnaire/{id}": {
            "get": {
                "tags": [
                    "questionnaires"
                ],
                "summary": "Get questionnaire by ID",
                "operationId": "194e74ce4321001fa61c99d422713f3b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Questionnaire not found."
                    }
                }
            }
        },
        "/api/reception/{id}": {
            "get": {
                "tags": [
                    "receptions"
                ],
                "summary": "Get reception by ID",
                "operationId": "42acd3b0bad65239817b1d78b3629310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reception not found."
                    }
                }
            }
        },
        "reception/{id}": {
            "put": {
                "tags": [
                    "receptions"
                ],
                "summary": "Updated reception",
                "operationId": "updateReception",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated reception object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reception"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reception not found"
                    }
                }
            }
        },
        "/api/regions/getall": {
            "get": {
                "tags": [
                    "regions"
                ],
                "summary": "Get all regions",
                "operationId": "180f26ae8864ebdfbdce25f080a0db58",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/regions/{id}": {
            "get": {
                "tags": [
                    "regions"
                ],
                "summary": "Get region by ID",
                "operationId": "779ac32b1c8e2e65fe3445678d28c01c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found."
                    }
                }
            }
        },
        "/regions/update/{id}": {
            "put": {
                "tags": [
                    "regions"
                ],
                "summary": "Updated region",
                "operationId": "updateRegion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated region object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Region"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                }
            }
        },
        "/api/requests/getall": {
            "get": {
                "tags": [
                    "requests"
                ],
                "summary": "Get all requests",
                "operationId": "e8dcd15f74956224d564957e496ad79f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/requests/{id}": {
            "get": {
                "tags": [
                    "requests"
                ],
                "summary": "Get request by ID",
                "operationId": "a7c528026749427435722f1a521cdd56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request not found."
                    }
                }
            }
        },
        "/api/roles/getall": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles",
                "operationId": "507d3b8d25806ea50f88f6be4c4b44db",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get role by ID",
                "operationId": "34930a00dde2bbf0adff67c97ba28de9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found."
                    }
                }
            }
        },
        "/roles/update/{id}": {
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "Updated role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated role object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/severity-damages/{id}": {
            "put": {
                "tags": [
                    "severity-damages"
                ],
                "summary": "Updated severity damage",
                "operationId": "updateSeverityDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated severity damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeverityDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeverityDamage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Severity damage not found"
                    }
                }
            }
        },
        "/squares/{id}": {
            "put": {
                "tags": [
                    "squares"
                ],
                "summary": "Updated square",
                "operationId": "updateSquare",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated square object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Square"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Square"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Square not found"
                    }
                }
            }
        },
        "/api/states/getall": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Get all states",
                "operationId": "2434f79655220bf55bb73d8bda7b2040",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/states/{id}": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Get state by ID",
                "operationId": "b5afa7376a4d26ba0a60c8d21eb8706b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found."
                    }
                }
            }
        },
        "/states/update/{id}": {
            "put": {
                "tags": [
                    "states"
                ],
                "summary": "Updated state",
                "operationId": "updateState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    }
                }
            }
        },
        "/api/state-pending-tasks/getall": {
            "get": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Get all state pending tasks",
                "operationId": "b394328066159fde44ff9dbe36efd135",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/state-pending-tasks/{id}": {
            "get": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Get state pending task by ID",
                "operationId": "614d75d6b9f0e7f791f163cf740af338",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State Pending Task not found."
                    }
                }
            }
        },
        "/state-pending-tasks/update/{id}": {
            "put": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Updated purchase state pending task",
                "operationId": "updateStatePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatePendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State pending task not found"
                    }
                }
            }
        },
        "/api/state-requests/getall": {
            "get": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Get all state requests",
                "operationId": "b60131077945bf093dc7391458a2a27e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/state-requests/{id}": {
            "get": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Get state request by ID",
                "operationId": "67e09ae7607eea7aa122047bd0fbf673",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State Request not found."
                    }
                }
            }
        },
        "/state-requests/update/{id}": {
            "put": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Updated state request",
                "operationId": "updateStateRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated state request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State request not found"
                    }
                }
            }
        },
        "/status-damages/{id}": {
            "put": {
                "tags": [
                    "status-damages"
                ],
                "summary": "Updated status damage",
                "operationId": "updateStatusDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated status damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusDamage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Status damage not found"
                    }
                }
            }
        },
        "/streets/{id}": {
            "put": {
                "tags": [
                    "streets"
                ],
                "summary": "Updated street",
                "operationId": "updateStreet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated street object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Street"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Street"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Street not found"
                    }
                }
            }
        },
        "/api/sub-states/getall": {
            "get": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Get all sub states",
                "operationId": "b3eb2aa43c20d41476a6648a6d4cbc3b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/sub-states/{id}": {
            "get": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Get sub state by ID",
                "operationId": "f167021ecc8143de269d884d671e63d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub State not found."
                    }
                }
            }
        },
        "/sub-states/update/{id}": {
            "put": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Updated sub state",
                "operationId": "updateSubState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated sub state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubState"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub state not found"
                    }
                }
            }
        },
        "/api/tasks/getall": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "operationId": "69e1dfe714eb54caafa9f62b801c764e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get task by ID",
                "operationId": "5df5c9bcba675f8a32805eae92d8e0d2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found."
                    }
                }
            }
        },
        "/tasks/update/{id}": {
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Updated task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/trade-states/getall": {
            "get": {
                "tags": [
                    "trade-states"
                ],
                "summary": "Get all type trade states",
                "operationId": "ad41af42d57697ee2ac04b103157b0cc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TradeState"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/transports/getall": {
            "get": {
                "tags": [
                    "transports"
                ],
                "summary": "Get all transports",
                "operationId": "369c7b135cf802070b4000e3ac736cb5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/transports/{id}": {
            "get": {
                "tags": [
                    "transports"
                ],
                "summary": "Get transport by ID",
                "operationId": "821b1f145a0183547e18d534bebb3e53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transport not found."
                    }
                }
            }
        },
        "/transports/update/{id}": {
            "put": {
                "tags": [
                    "transports"
                ],
                "summary": "Updated transport",
                "operationId": "updateTransport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated transport object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transport"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transport not found"
                    }
                }
            }
        },
        "/api/type-model-orders/getall": {
            "get": {
                "tags": [
                    "type-model-orders"
                ],
                "summary": "Get all type type model orders",
                "operationId": "a973d51d98b056bbfb63ed6710b80b6e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeModelOrder"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/type-requests/getall": {
            "get": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Get all type requests",
                "operationId": "3f9d7ae6e59582a7a84ce3e18c7f393b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/type-requests/{id}": {
            "get": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Get type request by ID",
                "operationId": "ddb217672ddb73d759680095fe6367cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Request not found."
                    }
                }
            }
        },
        "/type-requests/update/{id}": {
            "put": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Updated type request",
                "operationId": "updateTypeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated type request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type request not found"
                    }
                }
            }
        },
        "/api/type-reservations/getall": {
            "get": {
                "tags": [
                    "type-reservations"
                ],
                "summary": "Get all type type reservations",
                "operationId": "285ce32743a7cbb86181c430792c363a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeReservation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/type-tasks/getall": {
            "get": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Get all type tasks",
                "operationId": "ff2ebdabd089e115ffc241a849aa690f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/type-tasks/{id}": {
            "get": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Get type task by ID",
                "operationId": "024053f4ad93420475a2bbef7c6108be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Task not found."
                    }
                }
            }
        },
        "/type-tasks/update/{id}": {
            "put": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Updated type task",
                "operationId": "updateTypeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated type task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type task not found"
                    }
                }
            }
        },
        "/api/users/getall": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "faebafc217a0fbd8be95cd9fef5723cd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "operationId": "a58b2476400765004bf1868f8d787e0c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found."
                    }
                }
            }
        },
        "/users/update/{id}": {
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Updated user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/vehicles/getall": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get all vehicles",
                "operationId": "cb4e5e252b6df331f8c0fa688cb8b98c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/vehicles/{id}": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get type vehicle by ID",
                "operationId": "c0869ca2118f7059ceb09f1fea869dfd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                }
            }
        },
        "/vehicles/update/{id}": {
            "put": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Updated vehicle",
                "operationId": "updateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                }
            }
        },
        "/api/vehicle-exits/getall": {
            "get": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Get all type vehicle exits",
                "operationId": "6922eafc4dc2d34a5c538d18bd20429d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/api/vehicle-exits/{id}": {
            "get": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Get vehicle exit by ID",
                "operationId": "305ab29017b7647c2828246231fb2356",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Exit not found."
                    }
                }
            }
        },
        "/vehicle-exits/{id}": {
            "put": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Updated vehicle exit model",
                "operationId": "updateVehicleExit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle exit object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleExit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Exit not found"
                    }
                }
            }
        },
        "/api/vehicle-models/getall": {
            "get": {
                "tags": [
                    "vehicle-models"
                ],
                "summary": "Get all type vehicle models",
                "operationId": "2026a185f982e99b13b7b847f21c006e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                }
            }
        },
        "/vehicle-models/{id}": {
            "put": {
                "tags": [
                    "vehicle-models"
                ],
                "summary": "Updated vehicle model",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle model object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Model not found"
                    }
                }
            }
        },
        "/zones/{id}": {
            "put": {
                "tags": [
                    "zones"
                ],
                "summary": "Updated zones",
                "operationId": "updateZone",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated zone object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Zone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zone"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Zone not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Accessory": {
                "title": "Accessory model",
                "description": "Accessory model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "accessory_type_id": {
                        "title": "Type of Accessory ID",
                        "description": "Type of the accessory id",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the accessory",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AccessoryType": {
                "title": "Accessory type model",
                "description": "Accessory type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AccessoryVehicle": {
                "title": "Accessory vehicle model",
                "description": "Accessory vehicle model",
                "properties": {
                    "accessory_id": {
                        "title": "Accessory ID",
                        "description": "Accessory ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Brand": {
                "title": "Brand model",
                "description": "Brand model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the Brand",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Budget": {
                "title": "Budget model",
                "description": "Budget model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_total": {
                        "title": "Sub total",
                        "description": "Sub total",
                        "type": "number",
                        "format": "double"
                    },
                    "tax": {
                        "title": "Tax",
                        "description": "Tax",
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "title": "Total",
                        "description": "Total",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BudgetLine": {
                "title": "Budget line model",
                "description": "Budget line model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "budget_id": {
                        "title": "Budget ID",
                        "description": "Budget ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_budget_line_id": {
                        "title": "Type of Budget Line ID",
                        "description": "Type of Budget Line ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tax_id": {
                        "title": "Tax ID",
                        "description": "Tax ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price",
                        "type": "number",
                        "format": "double"
                    },
                    "amount": {
                        "title": "Amount",
                        "description": "Amount",
                        "type": "number",
                        "format": "double"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "sub_total": {
                        "title": "Sub total",
                        "description": "Sub total",
                        "type": "number",
                        "format": "double"
                    },
                    "tax": {
                        "title": "Tax",
                        "description": "Tax",
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "title": "Total",
                        "description": "Total",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "when was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "when was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BudgetPendingTask": {
                "title": "Budget pending task model",
                "description": "Budget pending task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "role_id": {
                        "title": "Role ID",
                        "description": "Role ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_budget_pending_task_id": {
                        "title": "State of Budget Pending Task ID",
                        "description": "State of Budget Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "code_authorization": {
                        "title": "Code of Authorization",
                        "description": "Code of Authorization",
                        "type": "integer",
                        "format": "int32"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string",
                        "format": "url"
                    },
                    "approved_by": {
                        "title": "Approved by",
                        "description": "Approved by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "declined_by": {
                        "title": "Declined by",
                        "description": "Declined by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Comment",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Campa": {
                "title": "Campa model",
                "description": "Campa model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_id": {
                        "title": "Province ID",
                        "description": "Province ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "location": {
                        "title": "location",
                        "description": "Location",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Status",
                        "type": "boolean"
                    },
                    "ocupation": {
                        "title": "Ocupation",
                        "description": "Ocupation",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CampaTypeModelOrder": {
                "title": "Campa type model order model",
                "description": "Campa type model order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CampaUser": {
                "title": "Campa User model",
                "description": "Campa User model",
                "properties": {
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category model",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Chat": {
                "title": "Chat model",
                "description": "Chat model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sent_user_app": {
                        "title": "Sent user app",
                        "description": "Sent user app",
                        "type": "boolean"
                    },
                    "message": {
                        "title": "Message",
                        "description": "Message",
                        "type": "string"
                    },
                    "read": {
                        "title": "Read",
                        "description": "Read",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Color": {
                "title": "Color model",
                "description": "Color model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment model",
                "description": "Comment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "string",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Company": {
                "title": "Company model",
                "description": "Company model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "tradename": {
                        "title": "Tradename",
                        "description": "Tradename",
                        "type": "string"
                    },
                    "nif": {
                        "title": "Nif",
                        "description": "Nif",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "location": {
                        "title": "Location",
                        "description": "Location",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "logo": {
                        "title": "Logo",
                        "description": "Logo",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "title": "Customer model",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_id": {
                        "title": "Province ID",
                        "description": "Province ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "cif": {
                        "title": "Cif",
                        "description": "Cif",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Damage": {
                "title": "Damage model",
                "description": "Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_type_id": {
                        "title": "Type of Damage ID",
                        "description": "Type of Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "severity_damage_id": {
                        "title": "Severity Damage ID",
                        "description": "Severity Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status_damage_id": {
                        "title": "Status Damage ID",
                        "description": "Status Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "internal": {
                        "title": "Internal",
                        "description": "Internal",
                        "type": "boolean"
                    },
                    "datetime_close": {
                        "title": "Datetime close",
                        "description": "Datetinme close",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DamageImage": {
                "title": "Damage image model",
                "description": "Damage image model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment_id": {
                        "title": "Comment ID",
                        "description": "Comment ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DamageType": {
                "title": "Damage type model",
                "description": "Damage type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DefleetVariable": {
                "title": "Defleet variable model",
                "description": "Defleet variable model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "kms": {
                        "title": "Kms",
                        "description": "Kms",
                        "type": "integer",
                        "format": "int32"
                    },
                    "years": {
                        "title": "Years",
                        "description": "Years",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DeliveryNote": {
                "title": "Delivery Note model",
                "description": "Delivery Note model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_delivery_note_id": {
                        "title": "Type of Delivery Note ID",
                        "description": "Type of Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "body": {
                        "title": "Body",
                        "description": "Body",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DeliveryVehicle": {
                "title": "Delivery vehicle model",
                "description": "Delivery Vehicle model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_note_id": {
                        "title": "Delivery Note ID",
                        "description": "Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "data_delivery": {
                        "title": "Data Delivery",
                        "description": "Data Delivery",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "delivery_by": {
                        "title": "Delivery by",
                        "description": "Delivery by",
                        "type": "string"
                    },
                    "canceled_by": {
                        "title": "Canceled by",
                        "description": "Canceled by",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EstimatedDate": {
                "title": "Estimated Date model",
                "description": "Estimated Date model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "title": "Reason",
                        "description": "Reason",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "GroupTask": {
                "title": "Group Task model",
                "description": "Group Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "questionnaire_id": {
                        "title": "Questionnaire ID",
                        "description": "Questionnaire ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "approved_available": {
                        "title": "Approved available",
                        "description": "Approved available",
                        "type": "boolean"
                    },
                    "datetime_approved": {
                        "title": "Datetime approved",
                        "description": "Datetime approved",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_defleeting": {
                        "title": "Datetime defleeting",
                        "description": "Datetime defleeting",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "HistoryLocation": {
                "title": "History Location model",
                "description": "History Location model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "square_id": {
                        "title": "Square ID",
                        "description": "Square ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Incidence": {
                "title": "Incidence model",
                "description": "Incidence model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "incidence_type_id": {
                        "title": "Type of Incidence ID",
                        "description": "Type of Incidence ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "read": {
                        "title": "Read",
                        "description": "Read",
                        "type": "boolean"
                    },
                    "resolved": {
                        "title": "Resolved",
                        "description": "Resolved",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "IncidenceImage": {
                "title": "Incidence image model",
                "description": "Incidence image model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "incidence_id": {
                        "title": "Incidence ID",
                        "description": "Incidence ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment_id": {
                        "title": "Comment ID",
                        "description": "Comment ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "IncidenceType": {
                "title": "Incidence type model",
                "description": "Incidence type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "IncidentSubmission": {
                "title": "Incidence Submission model",
                "description": "Incidence Submission model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LoginLog": {
                "title": "Login Log model",
                "description": "Login Log model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "device_description": {
                        "title": "Device description",
                        "description": "Device description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ManualQuestionnaire": {
                "title": "Manual Questionnaire model",
                "description": "Manual Questionnaire model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "filled_in": {
                        "title": "Filled ID",
                        "description": "Filled ID",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Monitor": {
                "title": "Monitor model",
                "description": "Monitor model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_by": {
                        "title": "Created by",
                        "description": "Created by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "NotifyDamage": {
                "title": "Notify Damage model",
                "description": "Notify Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Operation": {
                "title": "Operation model",
                "description": "Operation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "operation_type_id": {
                        "title": "Type of Operation ID",
                        "description": "Type of Operation ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OperationType": {
                "title": "Operation Type model",
                "description": "Operation Type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order model",
                "description": "Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "workshop_id": {
                        "title": "Workshop ID",
                        "description": "Workshop ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_id": {
                        "title": "State ID",
                        "description": "State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "id_gsp": {
                        "title": "ID GSP",
                        "description": "ID GSP",
                        "type": "integer",
                        "format": "int32"
                    },
                    "id_gsp_peritacion": {
                        "title": "ID GSP Expertise",
                        "description": "ID GSP Expert Opinion",
                        "type": "integer",
                        "format": "int32"
                    },
                    "fx_entrada": {
                        "title": "FX Entry",
                        "description": "FX Entry",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_fallo_check": {
                        "title": "FX Failed Check",
                        "description": "FX Failed Check",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_first_budget": {
                        "title": "FX First Budget",
                        "description": "FX First Budget",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_prevista_reparacion": {
                        "title": "FX Planned Repair",
                        "description": "FX Planned Repair",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id_gsp_certificado": {
                        "title": "ID GSP Certified",
                        "description": "ID GSP Certified",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PasswordResetCode": {
                "title": "Password Reset Code model",
                "description": "Password Reset Code model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "title": "Code",
                        "description": "Code",
                        "type": "integer",
                        "format": "int32"
                    },
                    "active": {
                        "title": "Status",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PendingAuthorization": {
                "title": "Pending Authorization model",
                "description": "Pending Authorization model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_authorization_id": {
                        "title": "State Authorization ID",
                        "description": "State Authorization ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PendingDownload": {
                "title": "Pending Download model",
                "description": "Pending Download model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_document": {
                        "title": "Type of Document",
                        "description": "Type of Document",
                        "type": "string"
                    },
                    "sended": {
                        "title": "Sended",
                        "description": "Sended",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PendingTask": {
                "title": "Pending Task model",
                "description": "Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question_answer_id": {
                        "title": "Question Answer ID",
                        "description": "Question Answer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_pending_task_id": {
                        "title": "State Pending Task ID",
                        "description": "State Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_start_id": {
                        "title": "User Start ID",
                        "description": "User Start ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_end_id": {
                        "title": "User End ID",
                        "description": "User End ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "duration": {
                        "title": "duration",
                        "description": "duration",
                        "type": "number",
                        "format": "double"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "integer",
                        "format": "int32"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "code_authorization": {
                        "title": "Code of Authorization",
                        "description": "Code of Authorization",
                        "type": "string"
                    },
                    "created_from_checklist": {
                        "title": "Created from Checklist",
                        "description": "Created from Checklist",
                        "type": "boolean"
                    },
                    "status_color": {
                        "title": "Status color",
                        "description": "Status color",
                        "type": "string"
                    },
                    "datetime_pending": {
                        "title": "Datetime pending",
                        "description": "Datetime pending",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_start": {
                        "title": "Datetime start",
                        "description": "Datetime start",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_pause": {
                        "title": "Datetime pause",
                        "description": "Datetime pause",
                        "type": "string",
                        "format": "date-time"
                    },
                    "total_paused": {
                        "title": "Total paused",
                        "description": "Total paused",
                        "type": "number",
                        "format": "double"
                    },
                    "datetime_finish": {
                        "title": "Datetime finish",
                        "description": "Datetime finish",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_state": {
                        "title": "Last Change State",
                        "description": "Last Change State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_sub_state": {
                        "title": "Last Change Sub State",
                        "description": "Last Change Sub State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment_state": {
                        "title": "Comment State",
                        "description": "Comment State",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "PendingTaskCanceled": {
                "title": "Pending Task Canceled model",
                "description": "Pending Task Canceled model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PeopleForReport": {
                "title": "People for Report model",
                "description": "People for Report model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_report_id": {
                        "title": "Type of Report ID",
                        "description": "Type of Report ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Province": {
                "title": "Province model",
                "description": "Province model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "region_id": {
                        "title": "Region ID",
                        "description": "Region ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_code": {
                        "title": "Province Code",
                        "description": "Province Code",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PurchaseOperation": {
                "title": "Purchase Operation model",
                "description": "Purchase Operation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Question": {
                "title": "Question model",
                "description": "Question model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question": {
                        "title": "Question",
                        "description": "Question",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "QuestionAnswer": {
                "title": "Question Answer model",
                "description": "Question Answer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "questionnaire_id": {
                        "title": "Questionnaire ID",
                        "description": "Questionnaire ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question_id": {
                        "title": "Question ID",
                        "description": "Question ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "response": {
                        "title": "Response",
                        "description": "Response",
                        "type": "boolean"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "description_response": {
                        "title": "Description response",
                        "description": "Description response",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Questionnaire": {
                "title": "Questionnaire model",
                "description": "Questionnaire model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "file": {
                        "title": "File",
                        "description": "File",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Reception": {
                "title": "Reception model",
                "description": "Reception model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "finished": {
                        "title": "Finished",
                        "description": "Finished",
                        "type": "boolean"
                    },
                    "has_accessories": {
                        "title": "Has accesories",
                        "description": "Has accesories",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Region": {
                "title": "Region model",
                "description": "Region model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Request": {
                "title": "Request model",
                "description": "Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_request_id": {
                        "title": "State Request ID",
                        "description": "State Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_request_id": {
                        "title": "Type Request ID",
                        "description": "Type Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "datetime_request": {
                        "title": "Datetime Request",
                        "description": "Datetime Request",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_decline": {
                        "title": "Datetime Decline",
                        "description": "Datetime Decline",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_approved": {
                        "title": "Datetime Approved",
                        "description": "Datetime Approved",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation model",
                "description": "Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "request_id": {
                        "title": "Request ID",
                        "description": "Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reservation_time": {
                        "title": "Reservation Time",
                        "description": "Reservation Time",
                        "type": "integer",
                        "format": "int32"
                    },
                    "dni": {
                        "title": "DNI",
                        "description": "DNI",
                        "type": "string"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "string"
                    },
                    "contract": {
                        "title": "Contract",
                        "description": "Contract",
                        "type": "string"
                    },
                    "planned_reservation": {
                        "title": "Planned Reservation",
                        "description": "Planned Reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pickup_by_customer": {
                        "title": "Pickup by Customer",
                        "description": "Pickup by Customer",
                        "type": "boolean"
                    },
                    "transport_id": {
                        "title": "Transport ID",
                        "description": "Transport ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "actual_date": {
                        "title": "Actual Date",
                        "description": "Actual Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_reservation_id": {
                        "title": "Type of Reservation ID",
                        "description": "Type of Reservation ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "active": {
                        "title": "Status",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReservationTime": {
                "title": "Reservation Time model",
                "description": "Reservation Time model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "hours": {
                        "title": "Hours",
                        "description": "Hours",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role model",
                "description": "Role model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SeverityDamage": {
                "title": "Severity Damage model",
                "description": "Severity Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Square": {
                "title": "Square model",
                "description": "Square model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "street_id": {
                        "title": "Street ID",
                        "description": "Street ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "State": {
                "title": "State model",
                "description": "State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Type",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateAuthorization": {
                "title": "State Authorization model",
                "description": "State Authorization model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateBudgetPendingTask": {
                "title": "State Budget Pending Task model",
                "description": "State Budget Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateChange": {
                "title": "State Change model",
                "description": "State Change model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "total_time": {
                        "title": "Total Time",
                        "description": "Total Time",
                        "type": "integer",
                        "format": "int32"
                    },
                    "datetime_finish_sub_state": {
                        "title": "Datetime finish Sub state",
                        "description": "Datetime finish Sub state",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StatePendingTask": {
                "title": "State Pending Task model",
                "description": "State Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateRequest": {
                "title": "State Request model",
                "description": "State Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StatusDamage": {
                "title": "State Damage model",
                "description": "State Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Street": {
                "title": "Street model",
                "description": "Street model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "zone_id": {
                        "title": "Zone ID",
                        "description": "Zone ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SubState": {
                "title": "Sub State model",
                "description": "Sub State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_id": {
                        "title": "State ID",
                        "description": "State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "description": "Display Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SubStateChangeHistory": {
                "title": "Sub State Change History model",
                "description": "Sub State Change History model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task model",
                "description": "Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_task_id": {
                        "title": "Type of Task ID",
                        "description": "Type of Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "need_authorization": {
                        "title": "Need authorization",
                        "description": "Need authorization",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "duration": {
                        "title": "Type of Task ID",
                        "description": "Duration",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TaskReservation": {
                "title": "Task Reservation model",
                "description": "Task Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "request_id": {
                        "title": "Request ID",
                        "description": "Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Tax": {
                "title": "Tax model",
                "description": "Tax model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Value",
                        "type": "number",
                        "format": "double"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TradeState": {
                "title": "Trade State model",
                "description": "Trade State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Transport": {
                "title": "Transport model",
                "description": "Transport model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeBudgetLine": {
                "title": "Type Budget Line model",
                "description": "Type Budget Line model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeDeliveryNote": {
                "title": "Type Delivery Note model",
                "description": "Type Delivery Note model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeModelOrder": {
                "title": "Type Model Order model",
                "description": "Type Model Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReception": {
                "title": "Type Reception model",
                "description": "Type Reception model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReport": {
                "title": "Type Report model",
                "description": "Type Report model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeRequest": {
                "title": "Type Request model",
                "description": "Type Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReservation": {
                "title": "Type Reservation model",
                "description": "Type Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeTask": {
                "title": "Type Task model",
                "description": "Type Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeUserApp": {
                "title": "Type User App model",
                "description": "Type User App model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "role_id": {
                        "title": "Role ID",
                        "description": "Role ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_user_app_id": {
                        "title": "Type of User ID",
                        "description": "Type of the user in the app ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "workshop_id": {
                        "title": "Workshop ID",
                        "description": "Workshop of the user ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname of the user",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "Avatar of the user",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone of the user",
                        "type": "integer",
                        "format": "int32"
                    },
                    "first_login": {
                        "title": "First login",
                        "description": "First login of the user",
                        "type": "boolean"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Status of the user",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company of the user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle model",
                "description": "Vehicle model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "remote_id": {
                        "title": "Remote ID",
                        "description": "Remote ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "category_id": {
                        "title": "Category ID",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "color_id": {
                        "title": "Color ID",
                        "description": "Color ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type Model Order ID",
                        "description": "Type Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ubication": {
                        "title": "Ubication",
                        "description": "Ubication",
                        "type": "string"
                    },
                    "plate": {
                        "title": "Plate",
                        "description": "Plate",
                        "type": "string"
                    },
                    "vehicle_model_id": {
                        "title": "Vehicle Model ID",
                        "description": "Vehicle Model ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "kms": {
                        "title": "KMS",
                        "description": "KMS",
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_change_state": {
                        "title": "Last Change State",
                        "description": "Last Change State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_sub_state": {
                        "title": "Last Change Sub State",
                        "description": "Last Change Sub State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "next_itv": {
                        "title": "Next ITV",
                        "description": "Next ITV",
                        "type": "string",
                        "format": "date-time"
                    },
                    "has_environment_label": {
                        "title": "Has environment label",
                        "description": "Has environment label",
                        "type": "boolean"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "priority": {
                        "title": "Priority",
                        "description": "Priority",
                        "type": "boolean"
                    },
                    "version": {
                        "title": "Version",
                        "description": "Version",
                        "type": "string"
                    },
                    "vin": {
                        "title": "Vin",
                        "description": "Vin",
                        "type": "string"
                    },
                    "first_plate": {
                        "title": "First Plate",
                        "description": "First Plate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Latitude",
                        "type": "string"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Longitude",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Image",
                        "type": "string"
                    },
                    "trade_state_id": {
                        "title": "Trade State ID",
                        "description": "Trade State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "documentation": {
                        "title": "Documentation",
                        "description": "Documentation",
                        "type": "boolean"
                    },
                    "ready_to_delivery": {
                        "title": "Ready to delivery",
                        "description": "Ready to delivery",
                        "type": "boolean"
                    },
                    "created_by": {
                        "title": "Created by",
                        "description": "Created by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_user_id": {
                        "title": "Deleted User ID",
                        "description": "Deleted User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "VehicleExit": {
                "title": "Vehicle Exit model",
                "description": "Vehicle Exit model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_note_id": {
                        "title": "Delivery Note ID",
                        "description": "Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_to": {
                        "title": "Delivery to",
                        "description": "Delivery to",
                        "type": "string"
                    },
                    "name_place": {
                        "title": "Name place",
                        "description": "Name place",
                        "type": "string"
                    },
                    "is_rolling": {
                        "title": "Is Rolling",
                        "description": "Is Rolling",
                        "type": "boolean"
                    },
                    "date_delivery": {
                        "title": "Date delivery",
                        "description": "Date delivery",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VehicleModel": {
                "title": "Vehicle Model model",
                "description": "Vehicle Model model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "brand_id": {
                        "title": "Brand ID",
                        "description": "Brand ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VehiclePicture": {
                "title": "Vehicle Picture model",
                "description": "Vehicle Picture model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "plate": {
                        "title": "Plate",
                        "description": "Plate",
                        "type": "string"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Latitude",
                        "type": "string"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Longitude",
                        "type": "string"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Workshop": {
                "title": "Workshop model",
                "description": "Workshop model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "cif": {
                        "title": "CIF",
                        "description": "CIF",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "location": {
                        "title": "Location",
                        "description": "Location",
                        "type": "string"
                    },
                    "province": {
                        "title": "Province",
                        "description": "Province",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Zone": {
                "title": "Zone model",
                "description": "Zone model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}